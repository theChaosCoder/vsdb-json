{
    "namespace": "kagefunc",
    "shortalias": "",
    "identifier": "kagefunc",
    "name": "kagefunc",
    "type": "PyScript",
    "gpusupport": "",
    "vs_included": 0,
    "url_github": "https://github.com/Irrational-Encoding-Wizardry/kagefunc",
    "url_doom9": "",
    "url_avswiki": "",
    "url_website": "https://github.com/Irrational-Encoding-Wizardry/kagefunc",
    "vsrepo": 1,
    "description": "Several (edge) masking functions, adaptive grain, hybrid denoise",
    "deprecated": "",
    "created_at": "2018-09-25 13:07:37",
    "updated_at": "2018-09-25 13:07:37",
    "deleted_at": null,
    "category": "Collection",
    "functions": [
        {
            "name": "inverse_scale",
            "description": "",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:37",
            "updated_at": "2018-09-25 13:07:37",
            "deleted_at": null,
            "category": "Resizing and Format Conversion"
        },
        {
            "name": "generate_keyframes",
            "description": "Probably only useful for fansubbing. Generates qp-filename for keyframes to simplify timing",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:37",
            "updated_at": "2018-09-25 13:07:37",
            "deleted_at": null,
            "category": "unknown"
        },
        {
            "name": "adaptive_grain",
            "description": "Generates grain based on frame and pixel brightness. Details can be found here: https://kageru.moe/article.php?p=adaptivegrain",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:37",
            "updated_at": "2018-09-25 13:07:37",
            "deleted_at": null,
            "category": "unknown"
        },
        {
            "name": "conditional_resize",
            "description": "Fix oversharpened upscales by comparing a regular downscale with a blurry bicubic kernel downscale. Similar to the avisynth function. thr is lower in vapoursynth because it's normalized (between 0 and 1)",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:37",
            "updated_at": "2018-09-25 13:07:37",
            "deleted_at": null,
            "category": "Resizing and Format Conversion"
        },
        {
            "name": "squaremask",
            "description": "Basically a small script that draws white rectangles on a black background. Unless you're scenefiltering, this is useless.",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:37",
            "updated_at": "2018-09-25 13:07:37",
            "deleted_at": null,
            "category": "Masking and Edge Detecting"
        },
        {
            "name": "retinex_edgemask",
            "description": "Use retinex to greatly improve the accuracy of the edge detection in dark scenes.",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "Masking and Edge Detecting"
        },
        {
            "name": "kirsch",
            "description": "Kirsch edge detection. This uses 8 directions, so it's slower but better than Sobel (4 directions). More information: https://ddl.kageru.moe/konOJ.pdf",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "Masking and Edge Detecting"
        },
        {
            "name": "fast_sobel",
            "description": "Should behave similar to std.Sobel() but faster since it has no additional high-/lowpass, gain, or the sqrt. The internal filter is also a little brighter",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "Masking and Edge Detecting"
        },
        {
            "name": "hardsubmask",
            "description": "Uses multiple techniques to mask the hardsubs in video streams like Anime on Demand or Wakanim. Might (should) work for other hardsubs, too, as long as the subs are somewhat close to black/white.",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "Masking and Edge Detecting"
        },
        {
            "name": "hardsubmask_fades",
            "description": "Uses Sobel edge detection to find edges that are only present in the main clip.",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "Masking and Edge Detecting"
        },
        {
            "name": "crossfade",
            "description": "Crossfade clipa into clipb. Duration is the length of the blending zone. For example, crossfade(a, b, 100) will fade the last 100 frames of a into b.",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "Effects and Transitions"
        },
        {
            "name": "hybriddenoise",
            "description": "Denoise luma with BM3D (CPU-based) and chroma with KNLMeansCL (GPU-based)",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "Denoising"
        },
        {
            "name": "insert_clip",
            "description": "convenience function to insert things like Non-credit OP/ED into episodes",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "unknown"
        },
        {
            "name": "get_subsampling",
            "description": "returns string to be used with fmtc.resample",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "unknown"
        },
        {
            "name": "iterate",
            "description": "",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "unknown"
        },
        {
            "name": "fit_subsampling",
            "description": "Makes a value (e.g. resolution or crop value) compatible with the specified subsampling.",
            "bitdepth": "unknown",
            "colorspace": "unknown",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2018-09-25 13:07:38",
            "updated_at": "2018-09-25 13:07:38",
            "deleted_at": null,
            "category": "unknown"
        }
    ]
}