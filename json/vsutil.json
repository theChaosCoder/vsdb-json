{
    "namespace": "vsutil",
    "shortalias": "",
    "identifier": "vsutil",
    "name": "vsutil",
    "type": "PyScript",
    "gpusupport": "",
    "vs_included": 0,
    "url_github": "https://github.com/Irrational-Encoding-Wizardry/vsutil",
    "url_doom9": "",
    "url_avswiki": "",
    "url_website": "https://github.com/Irrational-Encoding-Wizardry/vsutil",
    "vsrepo": 1,
    "description": "A collection of general purpose Vapoursynth functions to be reused in modules and scripts",
    "deprecated": "",
    "created_at": "2019-06-03 04:07:17",
    "updated_at": "2019-06-03 04:07:17",
    "deleted_at": null,
    "category": "Collection",
    "functions": [
        {
            "name": "get_subsampling",
            "description": "Returns the subsampling of a clip in human-readable format.",
            "bitdepth": "any",
            "colorspace": "any",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:08:34",
            "updated_at": "2019-06-03 04:08:34",
            "deleted_at": null,
            "category": "Metrics and Analysis"
        },
        {
            "name": "get_depth",
            "description": "Returns the bitdepth of a clip as an integer.",
            "bitdepth": "any",
            "colorspace": "any",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:09:35",
            "updated_at": "2019-06-03 04:09:35",
            "deleted_at": null,
            "category": "Metrics and Analysis"
        },
        {
            "name": "get_plane_size",
            "description": "Calculates the size of the plane\r\n    :param frame:    The frame\r\n    :param planeno:  The plane\r\n    :return: (width, height)",
            "bitdepth": "any",
            "colorspace": "any",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:10:58",
            "updated_at": "2019-06-03 04:10:58",
            "deleted_at": null,
            "category": "Metrics and Analysis"
        },
        {
            "name": "iterate",
            "description": "Utility function that executes a given function for a given number of times.",
            "bitdepth": "a",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:11:36",
            "updated_at": "2019-06-03 04:11:36",
            "deleted_at": null,
            "category": "Scripts"
        },
        {
            "name": "insert_clip",
            "description": "Convenience method to insert a shorter clip into a longer one. The inserted clip cannot go beyond the last frame of the source clip or an exception is raised.",
            "bitdepth": "any",
            "colorspace": "any",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:12:24",
            "updated_at": "2019-06-03 04:12:24",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "fallback",
            "description": "Utility function that returns a value or a fallback if the value is None.",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:12:49",
            "updated_at": "2019-06-03 04:12:49",
            "deleted_at": null,
            "category": "Scripts"
        },
        {
            "name": "plane",
            "description": "Extract the plane with the given index from the clip.\r\n    :param clip:     The clip to extract the plane from.\r\n    :param planeno:  The planeno that specifies which plane to extract.\r\n    :return: A grayscale clip that only contains the given plane.",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:13:38",
            "updated_at": "2019-06-03 04:13:38",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "get_y",
            "description": "Helper to get the luma of a VideoNode.",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:13:55",
            "updated_at": "2019-06-03 04:13:55",
            "deleted_at": null,
            "category": "Metrics and Analysis"
        },
        {
            "name": "split",
            "description": "Returns a list of planes for the given input clip.",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:14:14",
            "updated_at": "2019-06-03 04:14:14",
            "deleted_at": null,
            "category": "Metrics and Analysis"
        },
        {
            "name": "join",
            "description": "Joins the supplied list of planes into a YUV video node.",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:14:47",
            "updated_at": "2019-06-03 04:14:47",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "frame2clip",
            "description": "Converts a vapoursynth frame to a clip.\r\n    :param frame:         The frame to wrap.\r\n    :param enforce_cache: Always add a cache. (Even if the vapoursynth module has this feature disabled)\r\n    :returns:     A one-frame VideoNode that yields the frame passed to the function.",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:15:59",
            "updated_at": "2019-06-03 04:15:59",
            "deleted_at": null,
            "category": null
        },
        {
            "name": "get_w",
            "description": "Calculates the width for a clip with the given height and aspect ratio.\r\nonly_even is True by default because it imitates the math behind most standard resolutions (e.g. 854x480).",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:16:24",
            "updated_at": "2019-06-03 04:16:24",
            "deleted_at": null,
            "category": "Metrics and Analysis"
        },
        {
            "name": "is_image",
            "description": "Returns true if a filename refers to an image.",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2019-06-03 04:17:31",
            "updated_at": "2019-06-03 04:17:31",
            "deleted_at": null,
            "category": "Metrics and Analysis"
        }
    ]
}