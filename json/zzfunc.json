{
    "namespace": "zzfunc",
    "shortalias": "",
    "identifier": "zzfunc",
    "name": "zzfunc",
    "type": "PyScript",
    "gpusupport": "",
    "vs_included": 0,
    "url_github": "https://github.com/kgrabs/zzfunc",
    "url_doom9": "",
    "url_avswiki": "",
    "url_website": "",
    "vsrepo": 0,
    "description": "A small collection of Vapoursynth scripts of varying usefulness",
    "deprecated": "",
    "created_at": "2020-06-12 06:53:27",
    "updated_at": "2020-06-12 06:53:27",
    "deleted_at": null,
    "category": "Collection",
    "functions": [
        {
            "name": "MinFilter",
            "description": "",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 06:54:37",
            "updated_at": "2020-06-12 06:54:37",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "MaxFilter",
            "description": "Pixelwise function that takes the stronger of two filtered clips",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 06:55:23",
            "updated_at": "2020-06-12 06:55:23",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "split",
            "description": "Passes arrays untouched.\r\nWith RGB input it behaves like get_r/g/b",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 06:56:06",
            "updated_at": "2020-06-12 06:56:06",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "join",
            "description": "Give clipa an array and it will behave like vsutil's",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 06:57:16",
            "updated_at": "2020-06-12 06:57:16",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "get_w",
            "description": "Calculate width based on height. Supply ref to calculate the aspect ratio ar based on ref's dimensions, otherwise it defaults to 16:9",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 06:57:54",
            "updated_at": "2020-06-12 06:57:54",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "bicubic_c",
            "description": "Auto-calculate the c value for bicubic based on your \"b\" value.",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 06:58:31",
            "updated_at": "2020-06-12 06:58:31",
            "deleted_at": null,
            "category": "Resizing and Format Conversion"
        },
        {
            "name": "src_left",
            "description": "For resizing GRAY clips containing chroma with MPEG2 placement",
            "bitdepth": "",
            "colorspace": "",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 06:59:01",
            "updated_at": "2020-06-12 06:59:01",
            "deleted_at": null,
            "category": "Resizing and Format Conversion"
        },
        {
            "name": "vstoavs",
            "description": "Convert the common Vapoursynth \"planes\" format planes=[0, 1, 2] to be used by fmtc.resample, mv.DegrainN, and placebo.Deband respectively.",
            "bitdepth": "any",
            "colorspace": "any",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 06:59:58",
            "updated_at": "2020-06-12 06:59:58",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "vstomv",
            "description": "Convert the common Vapoursynth \"planes\" format planes=[0, 1, 2] to be used by fmtc.resample, mv.DegrainN, and placebo.Deband respectively.",
            "bitdepth": "any",
            "colorspace": "any",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 07:00:27",
            "updated_at": "2020-06-12 07:00:27",
            "deleted_at": null,
            "category": "Other"
        },
        {
            "name": "vstoplacebo",
            "description": "Convert the common Vapoursynth \"planes\" format planes=[0, 1, 2] to be used by fmtc.resample, mv.DegrainN, and placebo.Deband respectively.",
            "bitdepth": "any",
            "colorspace": "any",
            "gpusupport": "",
            "deprecated": "",
            "created_at": "2020-06-12 07:00:55",
            "updated_at": "2020-06-12 07:00:55",
            "deleted_at": null,
            "category": "Other"
        }
    ]
}